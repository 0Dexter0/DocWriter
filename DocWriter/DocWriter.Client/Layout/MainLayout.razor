@using DocWriter.Shared
@inherits LayoutComponentBase

<MudThemeProvider IsDarkMode="true" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />


@if (!RendererInfo.IsInteractive)
{
    <div style="display: flex; justify-content: center; align-items: center; height: 100vh;">
        <MudProgressCircular Color="Color.Primary" Indeterminate="true"/>
    </div>
}
else
{
    <MudLayout Class="mud-height-full">
        <div style="visibility: @_visibility">
            <MudAppBar Elevation="1">
                <MudText Typo="Typo.h5" Class="ml-3 mr-5">DocWriter</MudText>
                <MudDivider Vertical Class="ml-3"/>
                <MudToolBar>
                    <MudButton Href="/" EndIcon="@Icons.Material.Filled.Edit">Editor</MudButton>
                    <MudButton Href="/presentation/" EndIcon="@Icons.Material.Filled.PresentToAll" Class="ml-5">Presentation Mode</MudButton>
                </MudToolBar>
                <MudSpacer/>
                <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End"/>
            </MudAppBar>
        </div>
        <MudMainContent Class="mud-height-full">
            @Body
        </MudMainContent>
    </MudLayout>
}

@code
{
    private string _visibility = "visible";

    [Inject]
    private IEditorFullScreenModeValueHolder EditorFullScreenModeValueHolder { get; init; }

    [Inject]
    private NavigationManager NavigationManager { get; init; }

    protected override void OnInitialized()
    {
        EditorFullScreenModeValueHolder.IsFullScreenChanged += (sender, b) =>
        {
            _visibility = b ? "hidden" : "visible";
            StateHasChanged();
        };
    }
}

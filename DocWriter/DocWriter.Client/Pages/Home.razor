@page "/"
@using DocWriter.Shared.Models

<MudGrid Style="height: 100%;">
    <div style="visibility: @_visibility">
        <MudItem>
            <MudDrawer @bind-Open="@_isDrawerOpen" Anchor="Anchor.Left" Width="300px" Variant="DrawerVariant.Mini" ClipMode="DrawerClipMode.Always">
                <MudDrawerHeader>
                    <MudIconButton @onclick="ToggleDrawer" Icon="@(_isDrawerOpen ? Icons.Material.Filled.ArrowLeft : Icons.Material.Filled.ArrowRight)" Style="margin-left: -20px;"/>
                </MudDrawerHeader>
                @if (_isDrawerOpen)
                {
                    <MudDrawerContainer Class="mud-height-full">
                        <MudPaper Width="300px" Height="100%" Elevation="0">
                            <MudStack AlignItems="AlignItems.Start">
                                <MudTextField T="string" Label="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" TextChanged="OnTextChangedAsync" Immediate="true" Clearable="true"/>
                                <MudTreeView Items="@_treeItemData" FilterFunc="MatchesNameAsync" @bind-SelectedValue="@_selectedItem"
                                             SelectionMode="SelectionMode.ToggleSelection" ServerData="ServerData"
                                             @ref="_treeView" Width="300px">
                                    <ItemTemplate>
                                        <MudTreeViewItem
                                            Value="@context.Value"
                                            Text="@context.Value!.Name"
                                            Items="@context.Children"
                                            ItemsChanged="@(new Action<IReadOnlyCollection<TreeItemData<FolderTreeItem>>>(items => OnItemsLoaded(context, items)))"
                                            @bind-Expanded="@context.Expanded"
                                            CanExpand="@context.Expandable"
                                            Icon="@context.Icon"
                                            IconExpanded="@Icons.Custom.Uncategorized.FolderOpen"
                                            IconColor="@(context.Value!.ProjectRoot ? Color.Tertiary : Color.Default)"
                                            LoadingIconColor="Color.Info">
                                            <BodyContent Context="inner">
                                                <div style="display: grid; grid-template-columns: 1fr auto; align-items: center; width: 100%">
                                                    <MudText Style="justify-self: start;">@inner.Text</MudText>
                                                    <div style="justify-self: end;">
                                                        <MudMenu Icon="@Icons.Material.Filled.MoreVert" Dense="true" AnchorOrigin="Origin.TopRight" TransformOrigin="Origin.TopRight">
                                                            @if (inner.Value!.Type is FolderTreeItemType.Markdown)
                                                            {
                                                                <MudMenuItem Label="Edit" Icon="@Icons.Material.Filled.Edit" OnClick="@(() => EditItemAsync(inner.Value.Path))"/>
                                                            }
                                                            <MudMenuItem Label="Delete" Icon="@Icons.Material.Filled.Delete" OnClick="DeleteItem"/>
                                                        </MudMenu>
                                                    </div>
                                                </div>
                                            </BodyContent>
                                        </MudTreeViewItem>
                                    </ItemTemplate>
                                </MudTreeView>
                            </MudStack>
                        </MudPaper>
                    </MudDrawerContainer>
                }
            </MudDrawer>
        </MudItem>
    </div>
    <MudItem Class="mud-width-full">
        <div class="ma-5 mud-height-full">
            @if (!_editMode)
            {
                <Preview FilePath="@_selectedItem?.Path" />
            }
            else
            {
                <MarkdownEditor
                    Value="@_markdownValue" ValueChanged="@OnMarkdownValueChanged"
                    ImageUploadEndpoint="@(NavigationManager.BaseUri + "api/images")"
                    UploadImage="true"
                    MaxHeight="calc(0.6 * 100vh)">
                </MarkdownEditor>
                <MudStack Row>
                    <MudSpacer />
                    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Cancel" Color="Color.Error" Size="Size.Small" OnClick="CancelEdit">Cancel</MudButton>
                    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" Color="Color.Success" Size="Size.Small" OnClick="SaveAsync">Save</MudButton>
                </MudStack>
            }
        </div>
    </MudItem>
</MudGrid>